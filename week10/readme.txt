星期二知识点：
进程的派生
在一个程序调用另一个可执行程序（命令）
	system——>派生新进程  systemtest——>sh-C——>command
	exex族——>用新代码替换旧代码，但是它的环境不派生子进程，运行环境完全为使用调用者。一般不单独使用，一般在fork或者vfork里面加入exec函数序列

	在内核里面进行派生共享资源的函数：fork（）、vfork（）、clone()		在linux里面线程和进程不加于明显区分

	操作系统运行程序的流程：

	1.操作系统——>断点/上下文——>系统栈			带走register、env、PT
	2.依据从就绪队列中选择B
	3.为B初始化/恢复上下文关系
	4.__attribute__constructer
	5.main
	6.__attrubute__destructer

	进程的结束:exit（n）、_exit(n)、return n; 
	n为退出码   n为八位	0代表成功	1<——>125——>进程失败，含义可定义	126可执行文件不存在   127表示可执行文件存在，但是无法运行   128<——>255——>进程因收到信号而结束
	如果return 在main（）函数里面使用时，相当于exit（）到达相同效果
	exit（）进程的结束（局部变量等资源不由他归还）

	fork()
	1.父进程复制资源给子进程（打开文件列表、页表）2.COW（Copy On Write)	3.父子进程运行顺序

	vfork()
	子进程运行在父进程的环境中，没有资源复制，只有调用了这两类函数——exec、exit，才发生父子分家、为子进程单独分配资源
	子先行、父阻塞
	使用exit,_exit()进行结束，而如果使用return则会导致父进程没有资源利用
	

